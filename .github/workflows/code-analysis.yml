name: Code Analysis with Snowflake Cortex

on:
  push:
    branches:
      - main # Trigger on push to main branch
  pull_request:
    branches:
      - main # Trigger on pull requests targeting main

jobs:
  analyze_code:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4 # Action to clone the repository

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Ensure this points to a Python version compatible with snowflake-snowpark-python.
                               # It's crucial this actually resolves to 3.10 or higher for Snowpark.
                               # If issues persist and 'Verify Python Version' below still shows 3.9.x,
                               # consider trying '3.11' or '3.12' to force a newer installation,
                               # or investigate if your GitHub Actions runner has a cached Python version conflict.

    - name: Verify Python Version
      run: python --version # ★★★ IMPORTANT: CHECK THIS STEP'S OUTPUT IN YOUR ACTIONS LOGS ★★★
                            # This will tell you exactly which Python version is being used.
                            # If it's not 3.10.x (or higher if you changed it), then 'setup-python' is not working as expected.

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install snowflake-connector-python "snowflake-snowpark-python<1.12.0" # Install required Snowflake libraries, pinning for compatibility.
                                                                                           # The "No matching distribution" error for Snowpark typically means
                                                                                           # the active Python version (as seen in the 'Verify Python Version' step)
                                                                                           # is incompatible with the specified Snowpark version.
        # python -m pip install requests # Uncomment if you implement GitHub/Bitbucket API calls in the script

    - name: Run Code Analysis
      env:
        # Securely pass Snowflake credentials as environment variables
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Uncomment if using GitHub API for feedback
        # GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        # GITHUB_REPOSITORY: ${{ github.repository }}
        # GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }} # Available for pull_request events
        # GITHUB_SHA: ${{ github.sha }} # Available for push events
      run: python your_analysis_script_name.py # Replace with the actual name of your Python script
